@using WWW.Domain.Entity;
@*@model IEnumerable<Category>*@
@model PageIndexViewModel<Category>;
@{
    ViewData["Title"] = "Index";
}



<div class="container p-3">
    <div class="row pt-4">
        <div class="col-6">
            <h2 class="text-color-white">Category List</h2>
		</div>
        <div class="col-6 text-end">
            <a asp-controller="Category" asp-action="Create" class="btn btn-primary">
               <i class="bi bi-plus-circle"></i> &nbsp; Create New Category
			</a>
		</div>
	</div>
    <br /><br />

<table class="table table-bordered table-striped" style="width:100%">
        <thead class="rounded" >
        <tr>
            <th class="text-color-white rounded">
                Category ID
			</th>
            <th class="text-color-white">
                Display Name
			</th>
            <th></th>
		</tr>
	</thead>
    <tbody style="border:2px solid white;">
            @if (Model.Data!=null)
            {
                @foreach(var obj in Model.Data)
                {
                <tr>
                    <td width="20%" class="text-color-white">
                            <span class="text-color-white">@obj.Id</span>
				    </td>
                    <td width="80%" class="text-color-white">
                            <span class="text-color-white">@obj.Name</span>
				    </td>
                    <td>
                        <div class="w-75 btn-group" role="group">
                            <a asp-controller="Category" asp-action="Edit" asp-route-id="@obj.Id"
                            class="btn btn-primary mx-2"> <i class="bi bi-pencil-square"></i> Edit</a>
                            <a asp-controller="Category" asp-action="Delete" asp-route-Id="@obj.Id"
                            class="btn btn-danger mx-2"> <i class="bi bi-trash-fill"></i> Delete</a>
					    </div>
				    </td>
			    </tr>
                }
            }
    </tbody>

</table>
</div>


@if (Model.Data != null)
{
@section Pagination {
        <div class="container" style="display: flex;justify-content: center;flex-wrap: wrap;">
            <ul class="pagination pagination-lg ">
                @if (Model.PageViewModel.HasPreviousPage) {
                    <li class="page-item">
                        <a class="page-link rounded-0 " asp-action="Index" asp-route-page="@(Model.PageViewModel.СurrentlyPageNumber - 1)">&laquo;</a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link rounded-0 " >&laquo;</a>
                    </li>
                }
                @for (int i = 1; i <= Model.PageViewModel.TotalPages;i++)
                {
                    @if (i == Model.PageViewModel.СurrentlyPageNumber)
                        {
                        <li class="page-item active" >
                                <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link" asp-action="Index" asp-route-page="@i">@i</a>
                        </li>
                    }
                }
                @if (Model.PageViewModel.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link rounded-0 " 
                            asp-action="Index" 
                            asp-route-page="@(Model.PageViewModel.СurrentlyPageNumber + 1)">
                            &raquo;
                        </a>
                    </li>
                }
                else
                {
                    <li class="page-item disabled">
                        <a class="page-link rounded-0 " href="#">&raquo;</a>
                    </li>
                }
            </ul>
        </div>
    }
}