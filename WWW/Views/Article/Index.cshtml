@using WWW.Domain.Entity;
@model PageIndexViewModel<Article>
@{
    ViewData["Title"] = "List";
}

@{

    if (@Model.Data.First().Category != null)
    {
        <strong><h1>List of @Model.Data.First().Category.Name</h1></strong>
    }
    else{
        <h1>List of all</h1>
    }
}

<div class="row mt-5 mb-2">
    <h1 style="color:white" >Articles</h1>
    @foreach (var i in Model.Data){
       @* <div class="col-lg-4">
            <div class="modal-body articleDescription">
                <div class="embed-responsive embed-responsive-16by9">
                    <img src="@Url.Action("GetImageById", "Help", new { id = i.Id })" class="img-fluid" alt="Image" />
                </div>


                <p>@i.Title</p>
                <p>@i.ShortDescription</p>
            </div>
            <div class="modal-footer">
                <p><a class="btn btn-primary">More</a></p>
            </div>
        </div>*@

        <div class="col-lg-4 d-flex">
        <div class="card mb-3">
            <h3 class="card-header text-black">@i.Title</h3>
            <div class="card-body">
                <h5 class="card-title">Special title treatment</h5>
                <h6 class="card-subtitle text-muted">Support card subtitle</h6>
            </div>
            @*<svg xmlns="http://www.w3.org/2000/svg" class="d-block user-select-none" width="100%" height="200" aria-label="Placeholder: Image cap" focusable="false" role="img" preserveAspectRatio="xMidYMid slice" viewBox="0 0 318 180" style="font-size:1.125rem;text-anchor:middle">*@
                @*<rect width="100%" height="100%" fill="#868e96"></rect>*@
                <img src="@Url.Action("GetImageById", "Help", new { id = i.Id })" class="img-fluid" alt="Image" />
                @*<text x="50%" y="50%" fill="#dee2e6" dy=".3em">Image cap</text>*@
            @*</svg>*@
            <div class="card-body text-black">
                <p class="card-text">@i.ShortDescription</p>
            </div>
@*            <ul class="list-group list-group-flush">
                <li class="list-group-item">Cras justo odio</li>
                <li class="list-group-item">Dapibus ac facilisis in</li>
                <li class="list-group-item">Vestibulum at eros</li>
            </ul>*@
            <div class="card-body d-flex justify-content-between">
                <a href="#" class="card-link">Card link</a>
                <a href="#" class="card-link" >Another link</a>
                    <p><a class="btn btn-primary card-link">More</a></p>
            </div>
            <div class="card-footer text-muted">
                @i.Date.Date_Of_Start
            </div>
        </div>
        </div>
        @*<div class="card">
            <div class="card-body">
                <h4 class="card-title">Card title</h4>
                <h6 class="card-subtitle mb-2 text-muted">Card subtitle</h6>
                <p class="card-text">Some quick example text to build on the card title and make up the bulk of the card's content.</p>
                <a href="#" class="card-link">Card link</a>
                <a href="#" class="card-link">Another link</a>
            </div>
        </div>*@
    }
    @section Pagination {
            <div class="container" style="display: flex;justify-content: center;flex-wrap: wrap;">
        <ul class="pagination pagination-lg ">
            @if (Model.PageViewModel.HasPreviousPage) {
                <li class="page-item">
                        <a class="page-link rounded-0 "   asp-route-page="@(Model.PageViewModel.СurrentlyPageNumber - 1)">&laquo;</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link rounded-0 " >&laquo;</a>
                </li>
            }
            @*########################################################################*@
            @for (int i = 1; i <= Model.PageViewModel.TotalPages;i++)
            {
                @if (i == Model.PageViewModel.СurrentlyPageNumber)
                    {
                    <li class="page-item active" >
                            <a class="page-link"   asp-route-page="@i">@i</a>
                    </li>
                }
                else
                {
                    <li class="page-item">
                            <a class="page-link"   asp-route-page="@i">@i</a>
                    </li>
                }
            }
            @*########################################################################*@
            @if (Model.PageViewModel.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link rounded-0 "
                    
                   asp-route-page="@(Model.PageViewModel.СurrentlyPageNumber + 1)">
                        &raquo;
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <a class="page-link rounded-0 " href="#">&raquo;</a>
                </li>
            }
        </ul>
    </div>

    }
</div>






@*    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Title)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Title)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.ShortDescription)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.ShortDescription)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Picture)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Picture)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Published)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Published)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.IsFavorite)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.IsFavorite)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Category)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Category.Name)
        </dd>
    </dl><hr />*@

@*<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
*@